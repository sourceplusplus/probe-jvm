name: Build JVM probe

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.svg'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.svg'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          echo "::set-output name=version::$VERSION"
          echo "SPP_RELEASE_VERSION=${VERSION/-SNAPSHOT/}" >> $GITHUB_ENV

      - run: ./gradlew assembleUp -Dbuild.profile=release -PprobeVersion=$SPP_RELEASE_VERSION

      - name: Docker IPs
        run: docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)
      - name: Set E2E_APP_HOST
        run: E2E_APP_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aqf "name=e2e-test")) && echo "E2E_APP_HOST=$E2E_APP_HOST" >> $GITHUB_ENV
      - name: Set SPP_PLATFORM_HOST
        run: SPP_PLATFORM_HOST=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aqf "name=spp-platform")) && echo "SPP_PLATFORM_HOST=$SPP_PLATFORM_HOST" >> $GITHUB_ENV
      - name: Wait for platform
        run: until $(curl --insecure --output /dev/null --silent --fail https://localhost:12800/api/new-token?access_token=change-me); do printf '.'; sleep 5; done && SPP_JWT_TOKEN=$(curl --insecure https://localhost:12800/api/new-token?access_token=change-me) && echo "SPP_JWT_TOKEN=$SPP_JWT_TOKEN" >> $GITHUB_ENV
      - name: Wait for skywalking
        run: |
          until $(curl --header "Authorization: Bearer ${{ env.SPP_JWT_TOKEN }}" --insecure --output /dev/null --silent --fail https://localhost:12800/health); do printf '.'; sleep 5; done

      #todo: create health for TraceSegmentServiceClient.statusChanged()
      - run: sleep 45s

      - name: Verify probe connected
        run: |
          resp=$(curl --header "Authorization: Bearer ${{ env.SPP_JWT_TOKEN }}" --insecure https://localhost:12800/clients) && [[ $(echo $resp | jq -r ."probes"[0]."meta"."language") == "java" ]] && echo $resp || (echo $resp && exit 1)

      - run: ./gradlew test -Dtest.profile=integration

      - run: ./gradlew composeLogs
        if: ${{ always() }}

      - name: Upload docker logs artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: docker-logs
          path: ./build/containers-logs

      - name: Remove Old Release Drafts
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}

      - name: Create release draft
        if: github.ref == 'refs/heads/master'
        id: createDraft
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SPP_RELEASE_VERSION }}
          release_name: v${{ env.SPP_RELEASE_VERSION }}
          draft: true

      - name: Upload spp-probe asset
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createDraft.outputs.upload_url }}
          asset_path: ./e2e/spp-probe-${{ env.SPP_RELEASE_VERSION }}.jar
          asset_name: spp-probe-${{ env.SPP_RELEASE_VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Upload spp-probe-services asset
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createDraft.outputs.upload_url }}
          asset_path: ./services/build/libs/spp-skywalking-services-${{ env.SPP_RELEASE_VERSION }}.jar
          asset_name: spp-skywalking-services-${{ env.SPP_RELEASE_VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Remove Old Snapshot Packages
        if: github.ref == 'refs/heads/master'
        uses: smartsquaregmbh/delete-old-packages@v0.5.0
        with:
          keep: 0
          version-pattern: "^\\d+\\.\\d+\\.\\d+-SNAPSHOT$"
          names: |
            plus.sourceplus.probe.probe-jvm
            plus.sourceplus.probe.probe-jvm-services

      - name: Publish New Snapshot Packages
        if: github.ref == 'refs/heads/master'
        run: ./gradlew publish -Dbuild.profile=release
        env:
          GH_PUBLISH_USERNAME: $GITHUB_ACTOR
          GH_PUBLISH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
